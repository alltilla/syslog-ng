name: Create and upload binaries from a tarball

on:
  workflow_call:
    inputs:
      tarball_artifact_name:
        required: true
        type: string
      upload_as:
        required: false
        type: string

jobs:
  create-and-upload-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dbld-builder-images:
        - { distro: 'debian-stretch',  upload: 'true' }
        - { distro: 'debian-buster',   upload: 'true' }
        - { distro: 'debian-testing',  upload: 'true' }
        - { distro: 'debian-sid',      upload: 'true' }
        - { distro: 'ubuntu-xenial',   upload: 'true' }
        - { distro: 'ubuntu-bionic',   upload: 'true' }
        - { distro: 'debian-bullseye', upload: 'true' }
        - { distro: 'ubuntu-focal',    upload: 'true' }
        - { distro: 'ubuntu-impish',   upload: 'true' }
        - { distro: 'centos-7',        upload: 'false' }
        - { distro: 'fedora-33',       upload: 'false' }
      fail-fast: false
    env:
      DISTRIBUTION: ${{ matrix.dbld-builder-images.distro }}
      UPLOAD: ${{ matrix.dbld-builder-images.upload }}

    steps:
      - name: Create a working directory
        run: |
          PACKAGING_WORKSPACE_ABS=$(mktemp --tmpdir=${GITHUB_WORKSPACE} -d tarball-XXXXX)
          PACKAGING_WORKSPACE_REL=${PACKAGING_WORKSPACE_ABS##"${GITHUB_WORKSPACE}/"}

          echo "PACKAGING_WORKSPACE_ABS=${PACKAGING_WORKSPACE_ABS}" >> ${GITHUB_ENV}
          echo "PACKAGING_WORKSPACE_REL=${PACKAGING_WORKSPACE_REL}" >> ${GITHUB_ENV}

      - name: Fetch tarball artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.tarball_artifact_name }}
          path: ${{ env.PACKAGING_WORKSPACE_REL }}

      - name: Extract tarball
        working-directory: ${{ env.PACKAGING_WORKSPACE_ABS }}
        run: |
          mkdir syslog-ng
          tar --strip-components=1 -xvf syslog-ng*.tar.gz -C syslog-ng

      - name: Create docker image
        working-directory: ${{ env.PACKAGING_WORKSPACE_ABS }}/syslog-ng
        run: |
          ./dbld/rules image-${{ env.DISTRIBUTION }}

      - name: Create package
        working-directory: ${{ env.PACKAGING_WORKSPACE_ABS }}/syslog-ng
        run: |
          ./dbld/rules package-${{ env.DISTRIBUTION }}

      - name: Calculate Azure path
        if: inputs.upload_as != '' && env.UPLOAD == 'true' && github.repository_owner == 'syslog-ng'
        run: |
          if [ ${{ inputs.upload_as }} = "stable" ]; then
            AZURE_PATH="incoming/release/${{ github.run_id }}/${{ env.DISTRIBUTION }}"
          elif [ ${{ inputs.upload_as }} = "nightly" ]; then
            AZURE_PATH="incoming/nightly/${{ env.DISTRIBUTION }}"
          else
            echo Unexpected input: upload_as=${{ inputs.upload_as }}
            false
          fi

          echo "AZURE_PATH=${AZURE_PATH}" >> ${GITHUB_ENV}

      # Note: azure/CLI docker container mounts the GITHUB_WORKSPACE folder and changes the environment variable.
      - name: Upload the package
        if: env.AZURE_PATH != ''
        uses: azure/CLI@v1
        env:
          SRC_PATH: ${{ env.PACKAGING_WORKSPACE_REL }}/syslog-ng/dbld/build/${{ env.DISTRIBUTION }}
          DST_PATH: ${{ env.AZURE_PATH }}
        with:
          inlineScript: az storage blob upload-batch --sas-token '${{ secrets.AZURE_SAS_TOKEN }}' --account-name 'syslogngose' --source ${GITHUB_WORKSPACE}/${SRC_PATH} --destination ${DST_PATH}
