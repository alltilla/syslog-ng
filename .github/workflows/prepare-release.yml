name: Create release candidate

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'VERSION'
        required: true

jobs:
  create-release-candidate:
    runs-on: ubuntu-18.04
    steps:
      - name: Set ENV variables
        run: |
          echo "::set-env name=RELEASE_VERSION::${{ github.event.inputs.version }}"

      - name: Checkout syslog-ng source
        uses: actions/checkout@v2

      - name: Configure git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Create release candidate git branch
        run: |
          i=0
          while true; do
            RELEASE_CANDIDATE_BRANCH=v${RELEASE_VERSION}rc${i};

            git ls-remote --exit-code --heads origin ${RELEASE_CANDIDATE_BRANCH} && BRANCH_ALREADY_EXISTS=0 || BRANCH_ALREADY_EXISTS=1

            if [ ${BRANCH_ALREADY_EXISTS} -ne 0 ]
            then
              git switch -c ${RELEASE_CANDIDATE_BRANCH}
              break
            fi
            i=$((i+1))
          done

          echo "::set-env name=RELEASE_CANDIDATE_BRANCH::${RELEASE_CANDIDATE_BRANCH}"

      - name: "DBLD: prepare-release"
        run: |
          ./dbld/rules prepare-release VERSION=$RELEASE_VERSION

          # TODO: Fix rhel specfile bump!
          sed 's/Version: 3.28.1/Version: $RELEASE_VERSION/g' packaging/rhel/syslog-ng.spec > packaging/rhel/syslog-ng.spec2
          mv packaging/rhel/syslog-ng.spec2 packaging/rhel/syslog-ng.spec

      - name: "Commit: version bump"
        run: |
          git commit -a -s -m "version: bumped to $RELEASE_VERSION"

      - name: Generate NEWS.md
        run: |
          # TODO: Generate contributors!
          ./news/create-newsfile.py

      - name: "Commit: NEWS.md"
        run: |
          git commit -a -s -m "NEWS: generate for $RELEASE_VERSION"

      # - name: "DBLD: release"
      #   run: |
      #     # TODO: Fix this mkdir problem!
      #     rm -rf dbld/build ; mkdir dbld/build

      #     ./dbld/rules release VERSION=$RELEASE_VERSION

      - name: Open Pull Request
        run: |
          export OWNER=${{ github.repository_owner }}
          export TITLE="Release candidate: ${RELEASE_CANDIDATE_BRANCH}"

          git push origin ${RELEASE_CANDIDATE_BRANCH}
          curl -i \
            --request "POST" \
            --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --header "Accept: application/vnd.github.v3+json" \
            --url "https://api.github.com/repos/${OWNER}/syslog-ng/pulls" \
            --data '{ "title": "'"${TITLE}"'", "body":"TEST BODY","head":"'${RELEASE_CANDIDATE_BRANCH}'","base":"master"}'
